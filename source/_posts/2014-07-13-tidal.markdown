---
layout: post
title: "Обзор Tidal"
date: 2014-07-13 23:29:35 +0300
comments: true
categories: 
---
Tidal - это микроязык для создания паттернов. Никаких юнит-генераторов, синтеза и dsp в Tidal нет, в качестве аудиодвижка используется внешняя библиотека Dirt. Dirt - это даже не синтезатор, а просто сэмплер. В комплекте с Dirt'ом идет набор перкуссионных сэмплов, при желании можно добавить своих семплов и использовать их с Tidal. На первый взгляд все очень просто и скромно, но тем не менее, открывает широкие возможности для экспериментов. 

{% soundcloud tracks 153640684 %}
<!--more-->
Tidal является "встраиваемым" языком, он не только написан на Haskell, но и выполняется в его окружении. При этом знание Haskell не обязательно, хотя Алекс Маклин (автор проекта) и рекомендует (ну мало ли, что он рекомендует). Использование интерпретатора позволяет создавать и модифицировать паттерны на лету. Таким обращом, Tidal изначально разрабатывался как язык для лайвкодинга.

{% soundcloud tracks 114878404 %}

{% codeblock lang:haskell %}
d1 $ (spread' (striate' 4) ((+0.2) < $ > slow 8 sine1)) $ jux rev $ sound (samples "[latibro*6,bd]/2" "0 7 4") |+| speed "[1 2 1.5]/4"
{% endcodeblock %}

Код может быть как тривиальным: 

{% codeblock lang:haskell %}
d1 $ sound "bd"
{% endcodeblock %}

Так и достаточно сложным:
{% codeblock lang:haskell %}
d1 $ (slow 16 $ trunc 0.25 $ every 3 (|+| sound "tabla:4") $ striate' 256 0.2 $ sound "tabla:1") |+| speed (every 3 ((*1.8) <$>) $ ((*2) <$>) "[[1 0.5 0.75 1.25 1.1225 1.1225 1 1.5 2], [~ 0.5 ~]/4, [4 ~ ~ 4 ~ ~ 2 6 ~ 3 ~ 8]/5]")
|+| vowel "[a o u i e]/5"
|+| gain "3"
|+| delay "[0 0 0 [0.5 0]/2 0]/3"
|+| delaytime "0.5"
|+| delayfeedback "0.6"
{% endcodeblock %}

{% soundcloud tracks 149775631 %}

В Tidal реализовано некоторое количество функций для генерации и преобразования паттернов, и также поощряется расширение пользовательскими функциями. Событийная модель отличается от SuperCollider и Common Music тем, что паттерны не являются последовательностью (или потоком) событий, а скорее функцией значения времени от события, что по мнению автора дает некоторые преимущества для лайв кодинга. Автор упоминал расширения, которые включают интеграцию с OSC протоколом.

{% soundcloud tracks 129063081 %}

Порог входа в Tidal достаточно низкий - синтаксис простой и лаконичный, функций не так много. 
Правда перед работой необходимо пройти нетриввиальный квест по установке (установи это, запусти то), и столкнутся с некоторыми ограничениями (только emacs, только хардкор). Помимо Dirt, для запуска Tidal требуется Jack. Я говорил, что в качестве редактора мы ограничены emacs?

{% soundcloud tracks 127869914 %}

Лаконичный синтаксис Tidal подталкивает к разным инициативам вроде Tidal cycles (аналог SCTweets, твиты со снэпшотами) или 365 Tidal Patterns (челендж - один паттерн в день на протяжении года). Код сопровождается аудиопримерами, прослушал, скопировал, запустил. А дальше модифицируй, как тебе вздумается.

{% soundcloud tracks 127442915 %}

Информация о проекте: http://yaxu.org/

Github: https://github.com/yaxu/Tidal/